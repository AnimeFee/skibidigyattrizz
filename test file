local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()


local Window = Fluent:CreateWindow({
    Title = "MercilessHub " .. Fluent.Version,
    SubTitle = "by Merciless",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Moon",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional

local Tabs = { MainScripts = Window:AddTab({ Title = "MainScripts", Icon = "settings" }),
Player = Window:AddTab({ Title = "Player", Icon = "settings" }),           
Trading = Window:AddTab({ Title = "Trading", Icon = "settings" }),
Shop = Window:AddTab({ Title = "Shop", Icon = "settings" }),
AutoRoll = Window:AddTab({ Title = "AutoRoll", Icon = "settings" }),       
AutoSellSwords = Window:AddTab({ Title = "AutoSell|Fuse", Icon = "settings" }),
AutoRaid = Window:AddTab({ Title = "AutoRaid", Icon = "settings" }),
AutoDungeon = Window:AddTab({ Title = "AutoDungeon", Icon = "settings" }),}

--button add
Tabs.Main:AddButton({
Title = "Button",
Description = "Very important button",
Callback = function()
Window:Dialog({
Title = "Title",
Content = "This is a dialog",
Buttons = {{
Title = "Confirm",
Callback = function()
print("Confirmed the dialog.")
end},

{Title = "Cancel",
Callback = function()
print("Cancelled the dialog.")
end}}})
end})

--slider 
local Slider = Tabs.Main:AddSlider("Slider", {
Title = "Slider",
Description = "This is a slider",
Default = 2,
Min = 0,
Max = 5,
Rounding = 1,
Callback = function(Value)
print("Slider was changed:", Value)
end})

--drop down
local Dropdown = Tabs.Main:AddDropdown("Dropdown", {
Title = "Dropdown",
Values = {"one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen"},
Multi = false,
Default = 1,})
Dropdown:SetValue("four")
Dropdown:OnChanged(function(Value)
print("Dropdown changed:", Value)
end)

--toggles
local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Toggle", Default = false })
Toggle:OnChanged(function()
print("Toggle changed:", Options.MyToggle.Value)
end)

Options.MyToggle:SetValue(false)
